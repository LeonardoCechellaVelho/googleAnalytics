{"version":3,"sources":["webpack:///$_lazy_route_resources|lazy|groupOptions: {}|namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/cart.service.ts","webpack:///src/app/cart/cart.component.html","webpack:///src/app/cart/cart.component.ts","webpack:///src/app/product-alerts/product-alerts.component.html","webpack:///src/app/product-alerts/product-alerts.component.ts","webpack:///src/app/product-details/product-details.component.html","webpack:///src/app/product-details/product-details.component.ts","webpack:///src/app/product-list/product-list.component.html","webpack:///src/app/product-list/product-list.component.ts","webpack:///src/app/products.ts","webpack:///src/app/shipping/shipping.component.html","webpack:///src/app/shipping/shipping.component.ts","webpack:///src/app/top-bar/top-bar.component.ts","webpack:///src/app/top-bar/top-bar.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","id","module","exports","AppComponent","AppModule","BrowserModule","HttpClientModule","ReactiveFormsModule","RouterModule","path","component","ProductListComponent","ProductDetailsComponent","CartComponent","ShippingComponent","TopBarComponent","ProductAlertsComponent","CartService","http","items","product","push","get","cartService","formBuilder","getItems","checkoutForm","group","name","address","clearCart","console","warn","value","reset","onSubmit","notify","EventEmitter","route","routeParams","snapshot","paramMap","productIdFromRoute","Number","products","addToCart","window","alert","price","description","shippingCosts","getShippingPrices","environment","production","enableProdMode","platformBrowser","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n}\n","<app-top-bar></app-top-bar>\n\n<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { TopBarComponent } from './top-bar/top-bar.component';\nimport { ProductListComponent } from './product-list/product-list.component';\nimport { ProductAlertsComponent } from './product-alerts/product-alerts.component';\nimport { ProductDetailsComponent } from './product-details/product-details.component';\nimport { CartComponent } from './cart/cart.component';\nimport { ShippingComponent } from './shipping/shipping.component';\nimport { NgxGoogleAnalyticsModule } from 'ngx-google-analytics';\n\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    RouterModule.forRoot([\n      { path: '', component: ProductListComponent },\n      { path: 'products/:productId', component: ProductDetailsComponent },\n      { path: 'cart', component: CartComponent },\n      { path: 'shipping', component: ShippingComponent },\n    ])\n  ],\n  declarations: [\n    AppComponent,\n    TopBarComponent,\n    ProductListComponent,\n    ProductAlertsComponent,\n    ProductDetailsComponent,\n    CartComponent,\n    ShippingComponent\n  ],\n  bootstrap: [\n    AppComponent\n  ]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Product } from './products';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n  items: Product[] = [];\n\n  constructor(\n    private http: HttpClient\n  ) {}\n\n  addToCart(product: Product) {\n    this.items.push(product);\n  }\n\n  getItems() {\n    return this.items;\n  }\n\n  clearCart() {\n    this.items = [];\n    return this.items;\n  }\n\n  getShippingPrices() {\n    return this.http.get<{type: string, price: number}[]>('/assets/shipping.json');\n  }\n}\n","<h3>Cart</h3>\n\n<p>\n  <a routerLink=\"/shipping\">Shipping Prices</a>\n</p>\n\n<div class=\"cart-item\" *ngFor=\"let item of items\">\n  <span>{{ item.name }} </span>\n  <span>{{ item.price | currency }}</span>\n</div>\n\n<form [formGroup]=\"checkoutForm\" (ngSubmit)=\"onSubmit()\">\n\n  <div>\n    <label for=\"name\">\n      Name\n    </label>\n    <input id=\"name\" type=\"text\" formControlName=\"name\">\n  </div>\n\n  <div>\n    <label for=\"address\">\n      Address\n    </label>\n    <input id=\"address\" type=\"text\" formControlName=\"address\">\n  </div>\n\n  <button class=\"button\" type=\"submit\">Purchase</button>\n\n</form>\n","import { Component } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\n\nimport { CartService } from '../cart.service';\n\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.css']\n})\nexport class CartComponent {\n  items = this.cartService.getItems();\n  checkoutForm = this.formBuilder.group({\n    name: '',\n    address: ''\n  });\n  constructor(\n    private cartService: CartService,\n    private formBuilder: FormBuilder,\n    ) {}\n\n  onSubmit(): void {\n    // Process checkout data here\n    this.items = this.cartService.clearCart();\n    console.warn('Your order has been submitted', this.checkoutForm.value);\n    this.checkoutForm.reset();\n  }\n}\n","<p *ngIf=\"product && product.price > 700\">\n  <button (click)=\"notify.emit()\">Notify Me</button>\n</p>\n","import { Component } from '@angular/core';\nimport { Input } from '@angular/core';\nimport { Output, EventEmitter } from '@angular/core';\nimport { Product } from '../products';\n\n@Component({\n  selector: 'app-product-alerts',\n  templateUrl: './product-alerts.component.html',\n  styleUrls: ['./product-alerts.component.css']\n})\nexport class ProductAlertsComponent {\n  @Input() product: Product|undefined;\n  @Output() notify = new EventEmitter();\n}\n","<h2>Product Details</h2>\n\n<div *ngIf=\"product\">\n  <h3>{{ product.name }}</h3>\n  <h4>{{ product.price | currency }}</h4>\n  <p>{{ product.description }}</p>\n\n  <button (click)=\"addToCart(product)\">Buy</button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { Product, products } from '../products';\nimport { CartService } from '../cart.service';\n\n@Component({\n  selector: 'app-product-details',\n  templateUrl: './product-details.component.html',\n  styleUrls: ['./product-details.component.css']\n})\nexport class ProductDetailsComponent implements OnInit {\n  product: Product|undefined;\n\n  constructor(\n    private route: ActivatedRoute,\n    private cartService: CartService\n  ) { }\n\n  ngOnInit() {\n    // First get the product id from the current route.\n    const routeParams = this.route.snapshot.paramMap;\n    const productIdFromRoute = Number(routeParams.get('productId'));\n\n    // Find the product that correspond with the id provided in route.\n    this.product = products.find(product => product.id === productIdFromRoute);\n  }\n\n  addToCart(product: Product) {\n    this.cartService.addToCart(product);\n    window.alert('Your product has been added to the cart!');\n  }\n}\n","<h2>Products</h2>\n\n<div *ngFor=\"let product of products\">\n\n  <h3>\n    <a [title]=\"product.name + ' details'\" [routerLink]=\"['/products', product.id]\">\n      {{ product.name }}\n    </a>\n  </h3>\n\n  <p *ngIf=\"product.description\">\n    Description: {{ product.description }}\n  </p>\n\n  <button (click)=\"share()\">\n    Share\n  </button>\n\n  <app-product-alerts\n    [product]=\"product\"\n    (notify)=\"onNotify()\">\n  </app-product-alerts>\n\n</div>\n","import { Component } from '@angular/core';\n\nimport { products } from '../products';\n\n@Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.css']\n})\nexport class ProductListComponent {\n  products = products;\n\n  share() {\n    window.alert('The product has been shared!');\n  }\n\n  onNotify() {\n    window.alert('You will be notified when the product goes on sale');\n  }\n}\n","export interface Product {\n  id: number;\n  name: string;\n  price: number;\n  description: string;\n}\n\nexport const products: Product[] = [\n  {\n    id: 1,\n    name: 'Phone XL',\n    price: 799,\n    description: 'A large phone with one of the best screens'\n  },\n  {\n    id: 2,\n    name: 'Phone Mini',\n    price: 699,\n    description: 'A great phone with one of the best cameras'\n  },\n  {\n    id: 3,\n    name: 'Phone Standard',\n    price: 299,\n    description: ''\n  }\n];\n","<h3>Shipping Prices</h3>\n\n<div class=\"shipping-item\" *ngFor=\"let shipping of shippingCosts | async\">\n  <span>{{ shipping.type }}</span>\n  <span>{{ shipping.price | currency }}</span>\n</div>\n","import { Component } from '@angular/core';\n\nimport { CartService } from '../cart.service';\n\n@Component({\n  selector: 'app-shipping',\n  templateUrl: './shipping.component.html',\n  styleUrls: ['./shipping.component.css']\n})\nexport class ShippingComponent {\n  shippingCosts = this.cartService.getShippingPrices();\n\n\n\n  constructor(private cartService: CartService) {\n  }\n\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-top-bar',\n  templateUrl: './top-bar.component.html',\n  styleUrls: ['./top-bar.component.css']\n})\nexport class TopBarComponent {\n\n}\n","<a [routerLink]=\"['/']\">\n  <h1>My Store</h1>\n</a>\n\n<a routerLink=\"/cart\" class=\"button fancy-button\">\n  <i class=\"material-icons\">shopping_cart</i>Checkout\n</a>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}